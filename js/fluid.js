"use strict";var canvas=document.getElementsByTagName("canvas")[0];resizeCanvas();var config={SIM_RESOLUTION:128,DYE_RESOLUTION:1024,CAPTURE_RESOLUTION:512,DENSITY_DISSIPATION:1,VELOCITY_DISSIPATION:.2,PRESSURE:.8,PRESSURE_ITERATIONS:20,CURL:30,SPLAT_RADIUS:.25,SPLAT_FORCE:6e3,SHADING:!0,COLORFUL:!0,COLOR_UPDATE_SPEED:10,PAUSED:!1,BACK_COLOR:{r:0,g:0,b:0},TRANSPARENT:!1,BLOOM:!0,BLOOM_ITERATIONS:8,BLOOM_RESOLUTION:256,BLOOM_INTENSITY:.8,BLOOM_THRESHOLD:.6,BLOOM_SOFT_KNEE:.7,SUNRAYS:!0,SUNRAYS_RESOLUTION:196,SUNRAYS_WEIGHT:1};function pointerPrototype(){this.id=-1,this.texcoordX=0,this.texcoordY=0,this.prevTexcoordX=0,this.prevTexcoordY=0,this.deltaX=0,this.deltaY=0,this.down=!1,this.moved=!1,this.color=[30,0,300]}var pointers=[],splatStack=[];pointers.push(new pointerPrototype);var ref=getWebGLContext(canvas),gl=ref.gl,ext=ref.ext;function getWebGLContext(canvas){var params={alpha:!0,depth:!1,stencil:!1,antialias:!1,preserveDrawingBuffer:!1},gl=canvas.getContext("webgl2",params),isWebGL2=!!gl,halfFloat,supportLinearFiltering;isWebGL2||(gl=canvas.getContext("webgl",params)||canvas.getContext("experimental-webgl",params)),isWebGL2?(gl.getExtension("EXT_color_buffer_float"),supportLinearFiltering=gl.getExtension("OES_texture_float_linear")):(halfFloat=gl.getExtension("OES_texture_half_float"),supportLinearFiltering=gl.getExtension("OES_texture_half_float_linear")),gl.clearColor(0,0,0,1);var halfFloatTexType=isWebGL2?gl.HALF_FLOAT:halfFloat.HALF_FLOAT_OES,formatRGBA,formatRG,formatR;return isWebGL2?(formatRGBA=getSupportedFormat(gl,gl.RGBA16F,gl.RGBA,halfFloatTexType),formatRG=getSupportedFormat(gl,gl.RG16F,gl.RG,halfFloatTexType),formatR=getSupportedFormat(gl,gl.R16F,gl.RED,halfFloatTexType)):(formatRGBA=getSupportedFormat(gl,gl.RGBA,gl.RGBA,halfFloatTexType),formatRG=getSupportedFormat(gl,gl.RGBA,gl.RGBA,halfFloatTexType),formatR=getSupportedFormat(gl,gl.RGBA,gl.RGBA,halfFloatTexType)),ga("send","event",isWebGL2?"webgl2":"webgl",null==formatRGBA?"not supported":"supported"),{gl:gl,ext:{formatRGBA:formatRGBA,formatRG:formatRG,formatR:formatR,halfFloatTexType:halfFloatTexType,supportLinearFiltering:supportLinearFiltering}}}function getSupportedFormat(gl,internalFormat,format,type){if(!supportRenderTextureFormat(gl,internalFormat,format,type))switch(internalFormat){case gl.R16F:return getSupportedFormat(gl,gl.RG16F,gl.RG,type);case gl.RG16F:return getSupportedFormat(gl,gl.RGBA16F,gl.RGBA,type);default:return null}return{internalFormat:internalFormat,format:format}}function supportRenderTextureFormat(gl,internalFormat,format,type){var texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,internalFormat,4,4,0,format,type,null);var fbo=gl.createFramebuffer(),status;return gl.bindFramebuffer(gl.FRAMEBUFFER,fbo),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,texture,0),gl.checkFramebufferStatus(gl.FRAMEBUFFER)==gl.FRAMEBUFFER_COMPLETE}function startGUI(){var gui=new dat.GUI({width:300});gui.add(config,"DYE_RESOLUTION",{"高":1024,"中":512,"低":256,"非常低":128}).name("渲染质量").onFinishChange(initFramebuffers),gui.add(config,"SIM_RESOLUTION",{32:32,64:64,128:128,256:256}).name("模拟分辨率").onFinishChange(initFramebuffers),gui.add(config,"DENSITY_DISSIPATION",0,4).name("密度扩散"),gui.add(config,"VELOCITY_DISSIPATION",0,4).name("速度扩散"),gui.add(config,"PRESSURE",0,1).name("压力"),gui.add(config,"CURL",0,50).name("涡流强度").step(1),gui.add(config,"SPLAT_RADIUS",.01,1).name("飞溅半径"),gui.add(config,"SHADING").name("着色效果").onFinishChange(updateKeywords),gui.add(config,"COLORFUL").name("彩色效果"),gui.add(config,"PAUSED").name("暂停").listen(),gui.add({fun:function(){splatStack.push(parseInt(20*Math.random())+5)}},"fun").name("随机飞溅效果");var bloomFolder=gui.addFolder("光晕效果");bloomFolder.add(config,"BLOOM").name("启用").onFinishChange(updateKeywords),bloomFolder.add(config,"BLOOM_INTENSITY",.1,2).name("强度"),bloomFolder.add(config,"BLOOM_THRESHOLD",0,1).name("阈值");var sunraysFolder=gui.addFolder("阳光射线");sunraysFolder.add(config,"SUNRAYS").name("启用").onFinishChange(updateKeywords),sunraysFolder.add(config,"SUNRAYS_WEIGHT",.3,1).name("权重");var captureFolder=gui.addFolder("截图");captureFolder.addColor(config,"BACK_COLOR").name("背景颜色"),captureFolder.add(config,"TRANSPARENT").name(" 透明"),captureFolder.add({fun:captureScreenshot},"fun").name("截取屏幕")}function isMobile(){return/Mobi|Android/i.test(navigator.userAgent)}function captureScreenshot(){var res=getResolution(config.CAPTURE_RESOLUTION),target=createFBO(res.width,res.height,ext.formatRGBA.internalFormat,ext.formatRGBA.format,ext.halfFloatTexType,gl.NEAREST);render(target);var texture=framebufferToTexture(target),captureCanvas,datauri=textureToCanvas(texture=normalizeTexture(texture,target.width,target.height),target.width,target.height).toDataURL();downloadURI("fluid.png",datauri),URL.revokeObjectURL(datauri)}function framebufferToTexture(target){gl.bindFramebuffer(gl.FRAMEBUFFER,target.fbo);var length=target.width*target.height*4,texture=new Float32Array(length);return gl.readPixels(0,0,target.width,target.height,gl.RGBA,gl.FLOAT,texture),texture}function normalizeTexture(texture,width,height){for(var result=new Uint8Array(texture.length),id=0,i=height-1;i>=0;i--)for(var j=0;j<width;j++){var nid=i*width*4+4*j;result[nid+0]=255*clamp01(texture[id+0]),result[nid+1]=255*clamp01(texture[id+1]),result[nid+2]=255*clamp01(texture[id+2]),result[nid+3]=255*clamp01(texture[id+3]),id+=4}return result}function clamp01(input){return Math.min(Math.max(input,0),1)}function textureToCanvas(texture,width,height){var captureCanvas=document.createElement("canvas"),ctx=captureCanvas.getContext("2d");captureCanvas.width=width,captureCanvas.height=height;var imageData=ctx.createImageData(width,height);return imageData.data.set(texture),ctx.putImageData(imageData,0,0),captureCanvas}function downloadURI(filename,uri){var link=document.createElement("a");link.download=filename,link.href=uri,document.body.appendChild(link),link.click(),document.body.removeChild(link)}isMobile()&&(config.DYE_RESOLUTION=512),ext.supportLinearFiltering||(config.DYE_RESOLUTION=512,config.SHADING=!1,config.BLOOM=!1,config.SUNRAYS=!1);var Material=function Material(vertexShader,fragmentShaderSource){this.vertexShader=vertexShader,this.fragmentShaderSource=fragmentShaderSource,this.programs=[],this.activeProgram=null,this.uniforms=[]};Material.prototype.setKeywords=function setKeywords(keywords){for(var hash=0,i=0;i<keywords.length;i++)hash+=hashCode(keywords[i]);var program=this.programs[hash];if(null==program){var fragmentShader=compileShader(gl.FRAGMENT_SHADER,this.fragmentShaderSource,keywords);program=createProgram(this.vertexShader,fragmentShader),this.programs[hash]=program}program!=this.activeProgram&&(this.uniforms=getUniforms(program),this.activeProgram=program)},Material.prototype.bind=function bind(){gl.useProgram(this.activeProgram)};var Program=function Program(vertexShader,fragmentShader){this.uniforms={},this.program=createProgram(vertexShader,fragmentShader),this.uniforms=getUniforms(this.program)};function createProgram(vertexShader,fragmentShader){var program=gl.createProgram();if(gl.attachShader(program,vertexShader),gl.attachShader(program,fragmentShader),gl.linkProgram(program),!gl.getProgramParameter(program,gl.LINK_STATUS))throw gl.getProgramInfoLog(program);return program}function getUniforms(program){for(var uniforms=[],uniformCount=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS),i=0;i<uniformCount;i++){var uniformName=gl.getActiveUniform(program,i).name;uniforms[uniformName]=gl.getUniformLocation(program,uniformName)}return uniforms}function compileShader(type,source,keywords){source=addKeywords(source,keywords);var shader=gl.createShader(type);if(gl.shaderSource(shader,source),gl.compileShader(shader),!gl.getShaderParameter(shader,gl.COMPILE_STATUS))throw gl.getShaderInfoLog(shader);return shader}function addKeywords(source,keywords){if(null==keywords)return source;var keywordsString="";return keywords.forEach((function(keyword){keywordsString+="#define "+keyword+"\n"})),keywordsString+source}Program.prototype.bind=function bind(){gl.useProgram(this.program)};var baseVertexShader=compileShader(gl.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        vL = vUv - vec2(texelSize.x, 0.0);\n        vR = vUv + vec2(texelSize.x, 0.0);\n        vT = vUv + vec2(0.0, texelSize.y);\n        vB = vUv - vec2(0.0, texelSize.y);\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),blurVertexShader=compileShader(gl.VERTEX_SHADER,"\n    precision highp float;\n\n    attribute vec2 aPosition;\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform vec2 texelSize;\n\n    void main () {\n        vUv = aPosition * 0.5 + 0.5;\n        float offset = 1.33333333;\n        vL = vUv - texelSize * offset;\n        vR = vUv + texelSize * offset;\n        gl_Position = vec4(aPosition, 0.0, 1.0);\n    }\n"),blurShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = texture2D(uTexture, vUv) * 0.29411764;\n        sum += texture2D(uTexture, vL) * 0.35294117;\n        sum += texture2D(uTexture, vR) * 0.35294117;\n        gl_FragColor = sum;\n    }\n"),copyShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        gl_FragColor = texture2D(uTexture, vUv);\n    }\n"),clearShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float value;\n\n    void main () {\n        gl_FragColor = value * texture2D(uTexture, vUv);\n    }\n"),colorShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n\n    uniform vec4 color;\n\n    void main () {\n        gl_FragColor = color;\n    }\n"),checkerboardShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float aspectRatio;\n\n    #define SCALE 25.0\n\n    void main () {\n        vec2 uv = floor(vUv * SCALE * vec2(aspectRatio, 1.0));\n        float v = mod(uv.x + uv.y, 2.0);\n        v = v * 0.1 + 0.8;\n        gl_FragColor = vec4(vec3(v), 1.0);\n    }\n"),displayShaderSource="\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform sampler2D uBloom;\n    uniform sampler2D uSunrays;\n    uniform sampler2D uDithering;\n    uniform vec2 ditherScale;\n    uniform vec2 texelSize;\n\n    vec3 linearToGamma (vec3 color) {\n        color = max(color, vec3(0));\n        return max(1.055 * pow(color, vec3(0.416666667)) - 0.055, vec3(0));\n    }\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n\n    #ifdef SHADING\n        vec3 lc = texture2D(uTexture, vL).rgb;\n        vec3 rc = texture2D(uTexture, vR).rgb;\n        vec3 tc = texture2D(uTexture, vT).rgb;\n        vec3 bc = texture2D(uTexture, vB).rgb;\n\n        float dx = length(rc) - length(lc);\n        float dy = length(tc) - length(bc);\n\n        vec3 n = normalize(vec3(dx, dy, length(texelSize)));\n        vec3 l = vec3(0.0, 0.0, 1.0);\n\n        float diffuse = clamp(dot(n, l) + 0.7, 0.7, 1.0);\n        c *= diffuse;\n    #endif\n\n    #ifdef BLOOM\n        vec3 bloom = texture2D(uBloom, vUv).rgb;\n    #endif\n\n    #ifdef SUNRAYS\n        float sunrays = texture2D(uSunrays, vUv).r;\n        c *= sunrays;\n    #ifdef BLOOM\n        bloom *= sunrays;\n    #endif\n    #endif\n\n    #ifdef BLOOM\n        float noise = texture2D(uDithering, vUv * ditherScale).r;\n        noise = noise * 2.0 - 1.0;\n        bloom += noise / 255.0;\n        bloom = linearToGamma(bloom);\n        c += bloom;\n    #endif\n\n        float a = max(c.r, max(c.g, c.b));\n        gl_FragColor = vec4(c, a);\n    }\n",bloomPrefilterShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform vec3 curve;\n    uniform float threshold;\n\n    void main () {\n        vec3 c = texture2D(uTexture, vUv).rgb;\n        float br = max(c.r, max(c.g, c.b));\n        float rq = clamp(br - curve.x, 0.0, curve.y);\n        rq = curve.z * rq * rq;\n        c *= max(rq, br - threshold) / max(br, 0.0001);\n        gl_FragColor = vec4(c, 0.0);\n    }\n"),bloomBlurShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum;\n    }\n"),bloomFinalShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uTexture;\n    uniform float intensity;\n\n    void main () {\n        vec4 sum = vec4(0.0);\n        sum += texture2D(uTexture, vL);\n        sum += texture2D(uTexture, vR);\n        sum += texture2D(uTexture, vT);\n        sum += texture2D(uTexture, vB);\n        sum *= 0.25;\n        gl_FragColor = sum * intensity;\n    }\n"),sunraysMaskShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n\n    void main () {\n        vec4 c = texture2D(uTexture, vUv);\n        float br = max(c.r, max(c.g, c.b));\n        c.a = 1.0 - min(max(br * 20.0, 0.0), 0.8);\n        gl_FragColor = c;\n    }\n"),sunraysShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTexture;\n    uniform float weight;\n\n    #define ITERATIONS 16\n\n    void main () {\n        float Density = 0.3;\n        float Decay = 0.95;\n        float Exposure = 0.7;\n\n        vec2 coord = vUv;\n        vec2 dir = vUv - 0.5;\n\n        dir *= 1.0 / float(ITERATIONS) * Density;\n        float illuminationDecay = 1.0;\n\n        float color = texture2D(uTexture, vUv).a;\n\n        for (int i = 0; i < ITERATIONS; i++)\n        {\n            coord -= dir;\n            float col = texture2D(uTexture, coord).a;\n            color += col * illuminationDecay * weight;\n            illuminationDecay *= Decay;\n        }\n\n        gl_FragColor = vec4(color * Exposure, 0.0, 0.0, 1.0);\n    }\n"),splatShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uTarget;\n    uniform float aspectRatio;\n    uniform vec3 color;\n    uniform vec2 point;\n    uniform float radius;\n\n    void main () {\n        vec2 p = vUv - point.xy;\n        p.x *= aspectRatio;\n        vec3 splat = exp(-dot(p, p) / radius) * color;\n        vec3 base = texture2D(uTarget, vUv).xyz;\n        gl_FragColor = vec4(base + splat, 1.0);\n    }\n"),advectionShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uSource;\n    uniform vec2 texelSize;\n    uniform vec2 dyeTexelSize;\n    uniform float dt;\n    uniform float dissipation;\n\n    vec4 bilerp (sampler2D sam, vec2 uv, vec2 tsize) {\n        vec2 st = uv / tsize - 0.5;\n\n        vec2 iuv = floor(st);\n        vec2 fuv = fract(st);\n\n        vec4 a = texture2D(sam, (iuv + vec2(0.5, 0.5)) * tsize);\n        vec4 b = texture2D(sam, (iuv + vec2(1.5, 0.5)) * tsize);\n        vec4 c = texture2D(sam, (iuv + vec2(0.5, 1.5)) * tsize);\n        vec4 d = texture2D(sam, (iuv + vec2(1.5, 1.5)) * tsize);\n\n        return mix(mix(a, b, fuv.x), mix(c, d, fuv.x), fuv.y);\n    }\n\n    void main () {\n    #ifdef MANUAL_FILTERING\n        vec2 coord = vUv - dt * bilerp(uVelocity, vUv, texelSize).xy * texelSize;\n        vec4 result = bilerp(uSource, coord, dyeTexelSize);\n    #else\n        vec2 coord = vUv - dt * texture2D(uVelocity, vUv).xy * texelSize;\n        vec4 result = texture2D(uSource, coord);\n    #endif\n        float decay = 1.0 + dissipation * dt;\n        gl_FragColor = result / decay;\n    }",ext.supportLinearFiltering?null:["MANUAL_FILTERING"]),divergenceShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).x;\n        float R = texture2D(uVelocity, vR).x;\n        float T = texture2D(uVelocity, vT).y;\n        float B = texture2D(uVelocity, vB).y;\n\n        vec2 C = texture2D(uVelocity, vUv).xy;\n        if (vL.x < 0.0) { L = -C.x; }\n        if (vR.x > 1.0) { R = -C.x; }\n        if (vT.y > 1.0) { T = -C.y; }\n        if (vB.y < 0.0) { B = -C.y; }\n\n        float div = 0.5 * (R - L + T - B);\n        gl_FragColor = vec4(div, 0.0, 0.0, 1.0);\n    }\n"),curlShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uVelocity, vL).y;\n        float R = texture2D(uVelocity, vR).y;\n        float T = texture2D(uVelocity, vT).x;\n        float B = texture2D(uVelocity, vB).x;\n        float vorticity = R - L - T + B;\n        gl_FragColor = vec4(0.5 * vorticity, 0.0, 0.0, 1.0);\n    }\n"),vorticityShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision highp float;\n    precision highp sampler2D;\n\n    varying vec2 vUv;\n    varying vec2 vL;\n    varying vec2 vR;\n    varying vec2 vT;\n    varying vec2 vB;\n    uniform sampler2D uVelocity;\n    uniform sampler2D uCurl;\n    uniform float curl;\n    uniform float dt;\n\n    void main () {\n        float L = texture2D(uCurl, vL).x;\n        float R = texture2D(uCurl, vR).x;\n        float T = texture2D(uCurl, vT).x;\n        float B = texture2D(uCurl, vB).x;\n        float C = texture2D(uCurl, vUv).x;\n\n        vec2 force = 0.5 * vec2(abs(T) - abs(B), abs(R) - abs(L));\n        force /= length(force) + 0.0001;\n        force *= curl * C;\n        force.y *= -1.0;\n\n        vec2 vel = texture2D(uVelocity, vUv).xy;\n        gl_FragColor = vec4(vel + force * dt, 0.0, 1.0);\n    }\n"),pressureShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uDivergence;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        float C = texture2D(uPressure, vUv).x;\n        float divergence = texture2D(uDivergence, vUv).x;\n        float pressure = (L + R + B + T - divergence) * 0.25;\n        gl_FragColor = vec4(pressure, 0.0, 0.0, 1.0);\n    }\n"),gradientSubtractShader=compileShader(gl.FRAGMENT_SHADER,"\n    precision mediump float;\n    precision mediump sampler2D;\n\n    varying highp vec2 vUv;\n    varying highp vec2 vL;\n    varying highp vec2 vR;\n    varying highp vec2 vT;\n    varying highp vec2 vB;\n    uniform sampler2D uPressure;\n    uniform sampler2D uVelocity;\n\n    void main () {\n        float L = texture2D(uPressure, vL).x;\n        float R = texture2D(uPressure, vR).x;\n        float T = texture2D(uPressure, vT).x;\n        float B = texture2D(uPressure, vB).x;\n        vec2 velocity = texture2D(uVelocity, vUv).xy;\n        velocity.xy -= vec2(R - L, T - B);\n        gl_FragColor = vec4(velocity, 0.0, 1.0);\n    }\n"),blit=(gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer()),gl.bufferData(gl.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),gl.STATIC_DRAW),gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer()),gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint16Array([0,1,2,0,2,3]),gl.STATIC_DRAW),gl.vertexAttribPointer(0,2,gl.FLOAT,!1,0,0),gl.enableVertexAttribArray(0),function(destination){gl.bindFramebuffer(gl.FRAMEBUFFER,destination),gl.drawElements(gl.TRIANGLES,6,gl.UNSIGNED_SHORT,0)}),dye,velocity,divergence,curl,pressure,bloom,bloomFramebuffers=[],sunrays,sunraysTemp,ditheringTexture=createTextureAsync("/img/LDR_LLL1_0.png"),blurProgram=new Program(blurVertexShader,blurShader),copyProgram=new Program(baseVertexShader,copyShader),clearProgram=new Program(baseVertexShader,clearShader),colorProgram=new Program(baseVertexShader,colorShader),checkerboardProgram=new Program(baseVertexShader,checkerboardShader),bloomPrefilterProgram=new Program(baseVertexShader,bloomPrefilterShader),bloomBlurProgram=new Program(baseVertexShader,bloomBlurShader),bloomFinalProgram=new Program(baseVertexShader,bloomFinalShader),sunraysMaskProgram=new Program(baseVertexShader,sunraysMaskShader),sunraysProgram=new Program(baseVertexShader,sunraysShader),splatProgram=new Program(baseVertexShader,splatShader),advectionProgram=new Program(baseVertexShader,advectionShader),divergenceProgram=new Program(baseVertexShader,divergenceShader),curlProgram=new Program(baseVertexShader,curlShader),vorticityProgram=new Program(baseVertexShader,vorticityShader),pressureProgram=new Program(baseVertexShader,pressureShader),gradienSubtractProgram=new Program(baseVertexShader,gradientSubtractShader),displayMaterial=new Material(baseVertexShader,displayShaderSource);function initFramebuffers(){var simRes=getResolution(config.SIM_RESOLUTION),dyeRes=getResolution(config.DYE_RESOLUTION),texType=ext.halfFloatTexType,rgba=ext.formatRGBA,rg=ext.formatRG,r=ext.formatR,filtering=ext.supportLinearFiltering?gl.LINEAR:gl.NEAREST;dye=null==dye?createDoubleFBO(dyeRes.width,dyeRes.height,rgba.internalFormat,rgba.format,texType,filtering):resizeDoubleFBO(dye,dyeRes.width,dyeRes.height,rgba.internalFormat,rgba.format,texType,filtering),velocity=null==velocity?createDoubleFBO(simRes.width,simRes.height,rg.internalFormat,rg.format,texType,filtering):resizeDoubleFBO(velocity,simRes.width,simRes.height,rg.internalFormat,rg.format,texType,filtering),divergence=createFBO(simRes.width,simRes.height,r.internalFormat,r.format,texType,gl.NEAREST),curl=createFBO(simRes.width,simRes.height,r.internalFormat,r.format,texType,gl.NEAREST),pressure=createDoubleFBO(simRes.width,simRes.height,r.internalFormat,r.format,texType,gl.NEAREST),initBloomFramebuffers(),initSunraysFramebuffers()}function initBloomFramebuffers(){var res=getResolution(config.BLOOM_RESOLUTION),texType=ext.halfFloatTexType,rgba=ext.formatRGBA,filtering=ext.supportLinearFiltering?gl.LINEAR:gl.NEAREST;bloom=createFBO(res.width,res.height,rgba.internalFormat,rgba.format,texType,filtering),bloomFramebuffers.length=0;for(var i=0;i<config.BLOOM_ITERATIONS;i++){var width=res.width>>i+1,height=res.height>>i+1;if(width<2||height<2)break;var fbo=createFBO(width,height,rgba.internalFormat,rgba.format,texType,filtering);bloomFramebuffers.push(fbo)}}function initSunraysFramebuffers(){var res=getResolution(config.SUNRAYS_RESOLUTION),texType=ext.halfFloatTexType,r=ext.formatR,filtering=ext.supportLinearFiltering?gl.LINEAR:gl.NEAREST;sunrays=createFBO(res.width,res.height,r.internalFormat,r.format,texType,filtering),sunraysTemp=createFBO(res.width,res.height,r.internalFormat,r.format,texType,filtering)}function createFBO(w,h,internalFormat,format,type,param){gl.activeTexture(gl.TEXTURE0);var texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,param),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,param),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE),gl.texImage2D(gl.TEXTURE_2D,0,internalFormat,w,h,0,format,type,null);var fbo=gl.createFramebuffer(),texelSizeX,texelSizeY;return gl.bindFramebuffer(gl.FRAMEBUFFER,fbo),gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,texture,0),gl.viewport(0,0,w,h),gl.clear(gl.COLOR_BUFFER_BIT),{texture:texture,fbo:fbo,width:w,height:h,texelSizeX:1/w,texelSizeY:1/h,attach:function attach(id){return gl.activeTexture(gl.TEXTURE0+id),gl.bindTexture(gl.TEXTURE_2D,texture),id}}}function createDoubleFBO(w,h,internalFormat,format,type,param){var fbo1=createFBO(w,h,internalFormat,format,type,param),fbo2=createFBO(w,h,internalFormat,format,type,param);return{width:w,height:h,texelSizeX:fbo1.texelSizeX,texelSizeY:fbo1.texelSizeY,get read(){return fbo1},set read(value){fbo1=value},get write(){return fbo2},set write(value){fbo2=value},swap:function swap(){var temp=fbo1;fbo1=fbo2,fbo2=temp}}}function resizeFBO(target,w,h,internalFormat,format,type,param){var newFBO=createFBO(w,h,internalFormat,format,type,param);return copyProgram.bind(),gl.uniform1i(copyProgram.uniforms.uTexture,target.attach(0)),blit(newFBO.fbo),newFBO}function resizeDoubleFBO(target,w,h,internalFormat,format,type,param){return target.width==w&&target.height==h||(target.read=resizeFBO(target.read,w,h,internalFormat,format,type,param),target.write=createFBO(w,h,internalFormat,format,type,param),target.width=w,target.height=h,target.texelSizeX=1/w,target.texelSizeY=1/h),target}function createTextureAsync(url){var texture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,texture),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.REPEAT),gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.REPEAT),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,1,1,0,gl.RGB,gl.UNSIGNED_BYTE,new Uint8Array([255,255,255]));var obj={texture:texture,width:1,height:1,attach:function attach(id){return gl.activeTexture(gl.TEXTURE0+id),gl.bindTexture(gl.TEXTURE_2D,texture),id}},image=new Image;return image.onload=function(){obj.width=image.width,obj.height=image.height,gl.bindTexture(gl.TEXTURE_2D,texture),gl.texImage2D(gl.TEXTURE_2D,0,gl.RGB,gl.RGB,gl.UNSIGNED_BYTE,image)},image.src=url,obj}function updateKeywords(){var displayKeywords=[];config.SHADING&&displayKeywords.push("SHADING"),config.BLOOM&&displayKeywords.push("BLOOM"),config.SUNRAYS&&displayKeywords.push("SUNRAYS"),displayMaterial.setKeywords(displayKeywords)}updateKeywords(),initFramebuffers(),multipleSplats(parseInt(20*Math.random())+5);var lastUpdateTime=Date.now(),colorUpdateTimer=0;function update(){var dt=calcDeltaTime();resizeCanvas()&&initFramebuffers(),updateColors(dt),applyInputs(),config.PAUSED||step(dt),render(null),requestAnimationFrame(update)}function calcDeltaTime(){var now=Date.now(),dt=(now-lastUpdateTime)/1e3;return dt=Math.min(dt,.016666),lastUpdateTime=now,dt}function resizeCanvas(){var width=scaleByPixelRatio(canvas.clientWidth),height=scaleByPixelRatio(canvas.clientHeight);return(canvas.width!=width||canvas.height!=height)&&(canvas.width=width,canvas.height=height,!0)}function updateColors(dt){config.COLORFUL&&(colorUpdateTimer+=dt*config.COLOR_UPDATE_SPEED)>=1&&(colorUpdateTimer=wrap(colorUpdateTimer,0,1),pointers.forEach((function(p){p.color=generateColor()})))}function applyInputs(){splatStack.length>0&&multipleSplats(splatStack.pop()),pointers.forEach((function(p){p.moved&&(p.moved=!1,splatPointer(p))}))}function step(dt){gl.disable(gl.BLEND),gl.viewport(0,0,velocity.width,velocity.height),curlProgram.bind(),gl.uniform2f(curlProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(curlProgram.uniforms.uVelocity,velocity.read.attach(0)),blit(curl.fbo),vorticityProgram.bind(),gl.uniform2f(vorticityProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(vorticityProgram.uniforms.uVelocity,velocity.read.attach(0)),gl.uniform1i(vorticityProgram.uniforms.uCurl,curl.attach(1)),gl.uniform1f(vorticityProgram.uniforms.curl,config.CURL),gl.uniform1f(vorticityProgram.uniforms.dt,dt),blit(velocity.write.fbo),velocity.swap(),divergenceProgram.bind(),gl.uniform2f(divergenceProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(divergenceProgram.uniforms.uVelocity,velocity.read.attach(0)),blit(divergence.fbo),clearProgram.bind(),gl.uniform1i(clearProgram.uniforms.uTexture,pressure.read.attach(0)),gl.uniform1f(clearProgram.uniforms.value,config.PRESSURE),blit(pressure.write.fbo),pressure.swap(),pressureProgram.bind(),gl.uniform2f(pressureProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(pressureProgram.uniforms.uDivergence,divergence.attach(0));for(var i=0;i<config.PRESSURE_ITERATIONS;i++)gl.uniform1i(pressureProgram.uniforms.uPressure,pressure.read.attach(1)),blit(pressure.write.fbo),pressure.swap();gradienSubtractProgram.bind(),gl.uniform2f(gradienSubtractProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),gl.uniform1i(gradienSubtractProgram.uniforms.uPressure,pressure.read.attach(0)),gl.uniform1i(gradienSubtractProgram.uniforms.uVelocity,velocity.read.attach(1)),blit(velocity.write.fbo),velocity.swap(),advectionProgram.bind(),gl.uniform2f(advectionProgram.uniforms.texelSize,velocity.texelSizeX,velocity.texelSizeY),ext.supportLinearFiltering||gl.uniform2f(advectionProgram.uniforms.dyeTexelSize,velocity.texelSizeX,velocity.texelSizeY);var velocityId=velocity.read.attach(0);gl.uniform1i(advectionProgram.uniforms.uVelocity,velocityId),gl.uniform1i(advectionProgram.uniforms.uSource,velocityId),gl.uniform1f(advectionProgram.uniforms.dt,dt),gl.uniform1f(advectionProgram.uniforms.dissipation,config.VELOCITY_DISSIPATION),blit(velocity.write.fbo),velocity.swap(),gl.viewport(0,0,dye.width,dye.height),ext.supportLinearFiltering||gl.uniform2f(advectionProgram.uniforms.dyeTexelSize,dye.texelSizeX,dye.texelSizeY),gl.uniform1i(advectionProgram.uniforms.uVelocity,velocity.read.attach(0)),gl.uniform1i(advectionProgram.uniforms.uSource,dye.read.attach(1)),gl.uniform1f(advectionProgram.uniforms.dissipation,config.DENSITY_DISSIPATION),blit(dye.write.fbo),dye.swap()}function render(target){config.BLOOM&&applyBloom(dye.read,bloom),config.SUNRAYS&&(applySunrays(dye.read,dye.write,sunrays),blur(sunrays,sunraysTemp,1)),null!=target&&config.TRANSPARENT?gl.disable(gl.BLEND):(gl.blendFunc(gl.ONE,gl.ONE_MINUS_SRC_ALPHA),gl.enable(gl.BLEND));var width=null==target?gl.drawingBufferWidth:target.width,height=null==target?gl.drawingBufferHeight:target.height;gl.viewport(0,0,width,height);var fbo=null==target?null:target.fbo;config.TRANSPARENT||drawColor(fbo,normalizeColor(config.BACK_COLOR)),null==target&&config.TRANSPARENT&&drawCheckerboard(fbo),drawDisplay(fbo,width,height)}function drawColor(fbo,color){colorProgram.bind(),gl.uniform4f(colorProgram.uniforms.color,color.r,color.g,color.b,1),blit(fbo)}function drawCheckerboard(fbo){checkerboardProgram.bind(),gl.uniform1f(checkerboardProgram.uniforms.aspectRatio,canvas.width/canvas.height),blit(fbo)}function drawDisplay(fbo,width,height){if(displayMaterial.bind(),config.SHADING&&gl.uniform2f(displayMaterial.uniforms.texelSize,1/width,1/height),gl.uniform1i(displayMaterial.uniforms.uTexture,dye.read.attach(0)),config.BLOOM){gl.uniform1i(displayMaterial.uniforms.uBloom,bloom.attach(1)),gl.uniform1i(displayMaterial.uniforms.uDithering,ditheringTexture.attach(2));var scale=getTextureScale(ditheringTexture,width,height);gl.uniform2f(displayMaterial.uniforms.ditherScale,scale.x,scale.y)}config.SUNRAYS&&gl.uniform1i(displayMaterial.uniforms.uSunrays,sunrays.attach(3)),blit(fbo)}function applyBloom(source,destination){if(!(bloomFramebuffers.length<2)){var last=destination;gl.disable(gl.BLEND),bloomPrefilterProgram.bind();var knee=config.BLOOM_THRESHOLD*config.BLOOM_SOFT_KNEE+1e-4,curve0=config.BLOOM_THRESHOLD-knee,curve1=2*knee,curve2=.25/knee;gl.uniform3f(bloomPrefilterProgram.uniforms.curve,curve0,curve1,curve2),gl.uniform1f(bloomPrefilterProgram.uniforms.threshold,config.BLOOM_THRESHOLD),gl.uniform1i(bloomPrefilterProgram.uniforms.uTexture,source.attach(0)),gl.viewport(0,0,last.width,last.height),blit(last.fbo),bloomBlurProgram.bind();for(var i=0;i<bloomFramebuffers.length;i++){var dest=bloomFramebuffers[i];gl.uniform2f(bloomBlurProgram.uniforms.texelSize,last.texelSizeX,last.texelSizeY),gl.uniform1i(bloomBlurProgram.uniforms.uTexture,last.attach(0)),gl.viewport(0,0,dest.width,dest.height),blit(dest.fbo),last=dest}gl.blendFunc(gl.ONE,gl.ONE),gl.enable(gl.BLEND);for(var i$1=bloomFramebuffers.length-2;i$1>=0;i$1--){var baseTex=bloomFramebuffers[i$1];gl.uniform2f(bloomBlurProgram.uniforms.texelSize,last.texelSizeX,last.texelSizeY),gl.uniform1i(bloomBlurProgram.uniforms.uTexture,last.attach(0)),gl.viewport(0,0,baseTex.width,baseTex.height),blit(baseTex.fbo),last=baseTex}gl.disable(gl.BLEND),bloomFinalProgram.bind(),gl.uniform2f(bloomFinalProgram.uniforms.texelSize,last.texelSizeX,last.texelSizeY),gl.uniform1i(bloomFinalProgram.uniforms.uTexture,last.attach(0)),gl.uniform1f(bloomFinalProgram.uniforms.intensity,config.BLOOM_INTENSITY),gl.viewport(0,0,destination.width,destination.height),blit(destination.fbo)}}function applySunrays(source,mask,destination){gl.disable(gl.BLEND),sunraysMaskProgram.bind(),gl.uniform1i(sunraysMaskProgram.uniforms.uTexture,source.attach(0)),gl.viewport(0,0,mask.width,mask.height),blit(mask.fbo),sunraysProgram.bind(),gl.uniform1f(sunraysProgram.uniforms.weight,config.SUNRAYS_WEIGHT),gl.uniform1i(sunraysProgram.uniforms.uTexture,mask.attach(0)),gl.viewport(0,0,destination.width,destination.height),blit(destination.fbo)}function blur(target,temp,iterations){blurProgram.bind();for(var i=0;i<iterations;i++)gl.uniform2f(blurProgram.uniforms.texelSize,target.texelSizeX,0),gl.uniform1i(blurProgram.uniforms.uTexture,target.attach(0)),blit(temp.fbo),gl.uniform2f(blurProgram.uniforms.texelSize,0,target.texelSizeY),gl.uniform1i(blurProgram.uniforms.uTexture,temp.attach(0)),blit(target.fbo)}function splatPointer(pointer){var dx=pointer.deltaX*config.SPLAT_FORCE,dy=pointer.deltaY*config.SPLAT_FORCE;splat(pointer.texcoordX,pointer.texcoordY,dx,dy,pointer.color)}function multipleSplats(amount){for(var i=0;i<amount;i++){var color=generateColor(),x,y,dx,dy;color.r*=10,color.g*=10,color.b*=10,splat(Math.random(),Math.random(),1e3*(Math.random()-.5),1e3*(Math.random()-.5),color)}}function splat(x,y,dx,dy,color){gl.viewport(0,0,velocity.width,velocity.height),splatProgram.bind(),gl.uniform1i(splatProgram.uniforms.uTarget,velocity.read.attach(0)),gl.uniform1f(splatProgram.uniforms.aspectRatio,canvas.width/canvas.height),gl.uniform2f(splatProgram.uniforms.point,x,y),gl.uniform3f(splatProgram.uniforms.color,dx,dy,0),gl.uniform1f(splatProgram.uniforms.radius,correctRadius(config.SPLAT_RADIUS/100)),blit(velocity.write.fbo),velocity.swap(),gl.viewport(0,0,dye.width,dye.height),gl.uniform1i(splatProgram.uniforms.uTarget,dye.read.attach(0)),gl.uniform3f(splatProgram.uniforms.color,color.r,color.g,color.b),blit(dye.write.fbo),dye.swap()}function correctRadius(radius){var aspectRatio=canvas.width/canvas.height;return aspectRatio>1&&(radius*=aspectRatio),radius}function updatePointerDownData(pointer,id,posX,posY){pointer.id=id,pointer.down=!0,pointer.moved=!1,pointer.texcoordX=posX/canvas.width,pointer.texcoordY=1-posY/canvas.height,pointer.prevTexcoordX=pointer.texcoordX,pointer.prevTexcoordY=pointer.texcoordY,pointer.deltaX=0,pointer.deltaY=0,pointer.color=generateColor()}function updatePointerMoveData(pointer,posX,posY){pointer.prevTexcoordX=pointer.texcoordX,pointer.prevTexcoordY=pointer.texcoordY,pointer.texcoordX=posX/canvas.width,pointer.texcoordY=1-posY/canvas.height,pointer.deltaX=correctDeltaX(pointer.texcoordX-pointer.prevTexcoordX),pointer.deltaY=correctDeltaY(pointer.texcoordY-pointer.prevTexcoordY),pointer.moved=Math.abs(pointer.deltaX)>0||Math.abs(pointer.deltaY)>0}function updatePointerUpData(pointer){pointer.down=!1}function correctDeltaX(delta){var aspectRatio=canvas.width/canvas.height;return aspectRatio<1&&(delta*=aspectRatio),delta}function correctDeltaY(delta){var aspectRatio=canvas.width/canvas.height;return aspectRatio>1&&(delta/=aspectRatio),delta}function generateColor(){var c=HSVtoRGB(Math.random(),1,1);return c.r*=.15,c.g*=.15,c.b*=.15,c}function HSVtoRGB(h,s,v){var r,g,b,i,f,p,q,t;switch(p=v*(1-s),q=v*(1-(f=6*h-(i=Math.floor(6*h)))*s),t=v*(1-(1-f)*s),i%6){case 0:r=v,g=t,b=p;break;case 1:r=q,g=v,b=p;break;case 2:r=p,g=v,b=t;break;case 3:r=p,g=q,b=v;break;case 4:r=t,g=p,b=v;break;case 5:r=v,g=p,b=q}return{r:r,g:g,b:b}}function normalizeColor(input){var output;return{r:input.r/255,g:input.g/255,b:input.b/255}}function wrap(value,min,max){var range=max-min;return 0==range?min:(value-min)%range+min}function getResolution(resolution){var aspectRatio=gl.drawingBufferWidth/gl.drawingBufferHeight;aspectRatio<1&&(aspectRatio=1/aspectRatio);var min=Math.round(resolution),max=Math.round(resolution*aspectRatio);return gl.drawingBufferWidth>gl.drawingBufferHeight?{width:max,height:min}:{width:min,height:max}}function getTextureScale(texture,width,height){return{x:width/texture.width,y:height/texture.height}}function scaleByPixelRatio(input){var pixelRatio=window.devicePixelRatio||1;return Math.floor(input*pixelRatio)}function hashCode(s){if(0==s.length)return 0;for(var hash=0,i=0;i<s.length;i++)hash=(hash<<5)-hash+s.charCodeAt(i),hash|=0;return hash}update(),canvas.addEventListener("mousedown",(function(e){var posX=scaleByPixelRatio(e.offsetX),posY=scaleByPixelRatio(e.offsetY),pointer=pointers.find((function(p){return-1==p.id}));null==pointer&&(pointer=new pointerPrototype),updatePointerDownData(pointer,-1,posX,posY)})),canvas.addEventListener("mousemove",(function(e){var pointer=pointers[0],posX,posY;pointer.down&&updatePointerMoveData(pointer,scaleByPixelRatio(e.offsetX),scaleByPixelRatio(e.offsetY))})),window.addEventListener("mouseup",(function(){updatePointerUpData(pointers[0])})),canvas.addEventListener("touchstart",(function(e){e.preventDefault();for(var touches=e.targetTouches;touches.length>=pointers.length;)pointers.push(new pointerPrototype);for(var i=0;i<touches.length;i++){var posX=scaleByPixelRatio(touches[i].pageX),posY=scaleByPixelRatio(touches[i].pageY);updatePointerDownData(pointers[i+1],touches[i].identifier,posX,posY)}})),canvas.addEventListener("touchmove",(function(e){e.preventDefault();for(var touches=e.targetTouches,i=0;i<touches.length;i++){var pointer=pointers[i+1],posX,posY;if(pointer.down)updatePointerMoveData(pointer,scaleByPixelRatio(touches[i].pageX),scaleByPixelRatio(touches[i].pageY))}}),!1),window.addEventListener("touchend",(function(e){for(var touches=e.changedTouches,loop=function(i){var pointer=pointers.find((function(p){return p.id==touches[i].identifier}));null!=pointer&&updatePointerUpData(pointer)},i=0;i<touches.length;i++)loop(i)})),window.addEventListener("keydown",(function(e){"KeyP"===e.code&&(config.PAUSED=!config.PAUSED)," "===e.key&&splatStack.push(parseInt(20*Math.random())+5)}));